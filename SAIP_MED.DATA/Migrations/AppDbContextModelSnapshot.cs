// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SAIP_MED.DATA.Config;

namespace SAIP_MED.DATA.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SAIP_MED.CORE.Models.CentroRef", b =>
                {
                    b.Property<int>("IdCentroRef")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<string>("NombreCentro")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Telefono")
                        .HasMaxLength(20);

                    b.HasKey("IdCentroRef");

                    b.HasIndex("NombreCentro")
                        .IsUnique();

                    b.ToTable("CentroRef");
                });

            modelBuilder.Entity("SAIP_MED.CORE.Models.Contacto", b =>
                {
                    b.Property<int>("IdContacto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasMaxLength(60);

                    b.Property<string>("Direccion")
                        .HasMaxLength(200);

                    b.Property<string>("Email")
                        .HasMaxLength(30);

                    b.Property<int?>("IdDocumento");

                    b.Property<int>("IdPaciente");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("NroDocumento")
                        .HasMaxLength(12);

                    b.Property<string>("Relacion");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20);

                    b.HasKey("IdContacto");

                    b.HasIndex("IdDocumento");

                    b.HasIndex("IdPaciente");

                    b.ToTable("Contacto");
                });

            modelBuilder.Entity("SAIP_MED.CORE.Models.Documento", b =>
                {
                    b.Property<int>("IdDocumento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<string>("NombreDocumento")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("IdDocumento");

                    b.HasIndex("NombreDocumento")
                        .IsUnique();

                    b.ToTable("Documento");
                });

            modelBuilder.Entity("SAIP_MED.CORE.Models.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasMaxLength(60);

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Direccion")
                        .HasMaxLength(200);

                    b.Property<string>("Email")
                        .HasMaxLength(30);

                    b.Property<int>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<int?>("IdDocumento")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("NroDocumento")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("Telefono")
                        .HasMaxLength(20);

                    b.HasKey("IdEmpleado");

                    b.HasIndex("IdDocumento");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("SAIP_MED.CORE.Models.Especialidad", b =>
                {
                    b.Property<int>("IdEspecialidad")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<string>("NombreEspecialidad")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("IdEspecialidad");

                    b.HasIndex("NombreEspecialidad")
                        .IsUnique();

                    b.ToTable("Especialidad");
                });

            modelBuilder.Entity("SAIP_MED.CORE.Models.Medico", b =>
                {
                    b.Property<int>("IdMedico")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasMaxLength(60);

                    b.Property<string>("Direccion")
                        .HasMaxLength(200);

                    b.Property<string>("Email")
                        .HasMaxLength(30);

                    b.Property<int>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<int?>("IdDocumento")
                        .IsRequired();

                    b.Property<int>("IdEspecialidad");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("NroDocumento")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("Telefono")
                        .HasMaxLength(20);

                    b.HasKey("IdMedico");

                    b.HasIndex("IdDocumento");

                    b.HasIndex("IdEspecialidad");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("SAIP_MED.CORE.Models.Paciente", b =>
                {
                    b.Property<int>("IdPaciente")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasMaxLength(60);

                    b.Property<string>("Direccion")
                        .HasMaxLength(200);

                    b.Property<string>("Email")
                        .HasMaxLength(30);

                    b.Property<int>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<DateTime>("FechaNacimiento");

                    b.Property<int?>("IdDocumento")
                        .IsRequired();

                    b.Property<int?>("IdSeguro");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("NroDocumento")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Telefono")
                        .HasMaxLength(20);

                    b.HasKey("IdPaciente");

                    b.HasIndex("IdDocumento");

                    b.HasIndex("IdSeguro");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("SAIP_MED.CORE.Models.Seguro", b =>
                {
                    b.Property<int>("IdSeguro")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasMaxLength(60);

                    b.Property<string>("Direccion")
                        .HasMaxLength(200);

                    b.Property<string>("Email")
                        .HasMaxLength(30);

                    b.Property<int>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<int?>("IdDocumento")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("NroDocumento")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Telefono")
                        .HasMaxLength(20);

                    b.HasKey("IdSeguro");

                    b.HasIndex("IdDocumento");

                    b.ToTable("Seguro");
                });

            modelBuilder.Entity("SAIP_MED.CORE.Models.Contacto", b =>
                {
                    b.HasOne("SAIP_MED.CORE.Models.Documento", "Documento")
                        .WithMany()
                        .HasForeignKey("IdDocumento");

                    b.HasOne("SAIP_MED.CORE.Models.Paciente")
                        .WithMany("Contactos")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SAIP_MED.CORE.Models.Empleado", b =>
                {
                    b.HasOne("SAIP_MED.CORE.Models.Documento", "Documento")
                        .WithMany()
                        .HasForeignKey("IdDocumento")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SAIP_MED.CORE.Models.Medico", b =>
                {
                    b.HasOne("SAIP_MED.CORE.Models.Documento", "Documento")
                        .WithMany()
                        .HasForeignKey("IdDocumento")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SAIP_MED.CORE.Models.Especialidad", "Especialidad")
                        .WithMany()
                        .HasForeignKey("IdEspecialidad")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SAIP_MED.CORE.Models.Paciente", b =>
                {
                    b.HasOne("SAIP_MED.CORE.Models.Documento", "Documento")
                        .WithMany()
                        .HasForeignKey("IdDocumento")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SAIP_MED.CORE.Models.Seguro", "Seguro")
                        .WithMany()
                        .HasForeignKey("IdSeguro");
                });

            modelBuilder.Entity("SAIP_MED.CORE.Models.Seguro", b =>
                {
                    b.HasOne("SAIP_MED.CORE.Models.Documento", "Documento")
                        .WithMany()
                        .HasForeignKey("IdDocumento")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
